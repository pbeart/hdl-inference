import pickle
import mlgen
import fp as fp
import hdlgen
import argparse, os

from dataclasses import dataclass

parser = argparse.ArgumentParser(description='Process some images')
parser.add_argument("model", help="the input .mlgen array")
#parser.add_argument("input", help="comma-separated list of inputs")


float_environment = fp.FloatEnvironment("binary16")

args = parser.parse_args()

f = open(args.model, "rb")
mlgen_model: mlgen.Model = pickle.load(f)
f.close()

#last_layer = [float(x) for x in args.input.split(",")]

last_layer

for layer_index, layer in enumerate(mlgen_model.layers):
    last_layer = layer.eval(last_layer)
    print(f"Got layer {[f'{float(x):.2f}' for x in last_layer[:9]]}")

print(last_layer)